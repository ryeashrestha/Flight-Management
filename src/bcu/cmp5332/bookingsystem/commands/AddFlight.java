package bcu.cmp5332.bookingsystem.commands;

import bcu.cmp5332.bookingsystem.main.FlightBookingSystemException;
import bcu.cmp5332.bookingsystem.model.FlightBookingSystem;
import bcu.cmp5332.bookingsystem.model.Flight;

/**
 * {@code AddFlight} command is responsible for adding a new flight to the flight booking system.
 * It implements the {@link Command} interface and encapsulates the action of creating a new
 * flight with its details and adding it to the {@link FlightBookingSystem}.
 * <p>
 * The command creates a new {@link Flight} object with a unique ID generated by the system,
 * along with the provided flight number, destination, origin, departure date, capacity, price,
 * duration, and meal costs. It then adds this flight to the system's flight registry and increments
 * the next flight ID for future flight additions.
 * </p>
 *
 * @author Sanket Shrestha, Riya Shrestha
 * @version 1.0
 * @see Command
 * @see FlightBookingSystem
 * @see Flight
 * @see FlightBookingSystemException
 */
public class AddFlight implements Command {

    private final String flightNumber;
    private final String destination;
    private final String origin;
    private final String departureDate;
    private final int capacity;
    private final double price;
    private final String duration;
    private final double vegMealCost;
    private final double nonVegMealCost;

    /**
     * Constructs an {@code AddFlight} command.
     *
     * @param flightNumber    The flight number of the flight.
     * @param destination     The destination of the flight.
     * @param origin          The origin of the flight.
     * @param departureDate   The departure date of the flight.
     * @param capacity        The capacity of the flight (number of seats).
     * @param price           The price of the flight ticket.
     * @param duration        The duration of the flight.
     * @param vegMealCost     The cost of a vegetarian meal on the flight.
     * @param nonVegMealCost  The cost of a non-vegetarian meal on the flight.
     */
    public AddFlight(String flightNumber, String destination, String origin, String departureDate, int capacity, double price, String duration, double vegMealCost, double nonVegMealCost) {
        this.flightNumber = flightNumber;
        this.destination = destination;
        this.origin = origin;
        this.departureDate = departureDate;
        this.capacity = capacity;
        this.price = price;
        this.duration = duration;
        this.vegMealCost = vegMealCost;
        this.nonVegMealCost = nonVegMealCost;
    }

    /**
     * Executes the command to add a new flight to the flight booking system.
     * <p>
     * It creates a new {@link Flight} object, adds it to the {@link FlightBookingSystem},
     * and increments the system's next flight ID.
     * </p>
     *
     * @param flightBookingSystem The {@link FlightBookingSystem} to which the flight is to be added.
     * @return A success message indicating the flight number and assigned ID.
     * @throws FlightBookingSystemException This exception is not explicitly thrown by this command in the current implementation,
     *                                      but it is included in the method signature as the {@link Command#execute(FlightBookingSystem)}
     *                                      method declares it to be thrown. It is good practice to keep it in the signature
     *                                      in case future implementations of this command might throw exceptions.
     */
    @Override
    public String execute(FlightBookingSystem flightBookingSystem) throws FlightBookingSystemException {
        Flight flight = new Flight(flightBookingSystem.getNextFlightId(), flightNumber, destination, origin, departureDate, capacity, price, duration, vegMealCost, nonVegMealCost);
        flightBookingSystem.addFlight(flight);
        flightBookingSystem.setNextFlightId(flightBookingSystem.getNextFlightId() + 1);
        return "Flight " + flightNumber + " added with ID " + flight.getId();
    }
}